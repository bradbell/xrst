-----------------------------------------------------------------------------
                     xrst: Extract Sphinx RST Files
         Copyright (C) 2020-22 Bradley M. Bell (bradbell@seanet.com)
             This program is distributed under the terms of the
             GNU General Public License version 3.0 or later see
                   https://www.gnu.org/licenses/gpl-3.0.txt
----------------------------------------------------------------------------
{xrst_begin_parent xrst}

Extract Sphinx RST Files
########################

Version 2021.9.7
******************

Git Repository
**************
https://github.com/bradbell/xrst

Pip Install
***********
-   ``pip install --index-url https://test.pypi.org/simple/ xrst``

Run Program
***********
:ref:`run_xrst`

Purpose
*******
This is a pseudo sphinx extension that provides the following features:

#.  The rst file name for each section is also an abbreviated title used
    in the navigation bar and for linking to the section. This makes the
    navigation bar more useful while also having long descriptive titles.
    It also makes cross reference linking from other sections easier.
#.  Each section has its own table of contents (for its headings) that is
    separate from the table of contents for the sections. This makes it
    easy to move sections to different places in the over all structure.
#.  Enables documentation in the comments for source code
    when multiple computer languages are used for one package.
    Allows the documentation for one section to span multiple locations
    in the source code; see :ref:`suspend command<suspend_cmd>`.
#.  Allows for multiple sections (rst output files) to be specified by one
    input file. In addition, one section can be the parent for the
    other sections in a file.
#.  Generates the table of contents from the specification
    of which files are included; see :ref:`child commands<child_cmd>`.
    Generates a jump table to the headings for each section
    so that the navigation bar need not include this information.
#.  Includes a configurable :ref:`spell checker<spell_cmd>` and
    :ref:`index<genindex>`. The spell checker catches double word errors.
    Words in each heading are automatically included in the index.
#.  Makes it easy to include source code that also executes, from
    directly below the :ref:`code command<code_cmd>` or from
    a different location in a :ref:`file<file_cmd>`.
    This uses tokens in the source, not line numbers,
    to signify start and stop of inclusion from a file.

Contents
********
{xrst_child_list
    xrst/run_xrst.py
}

{xrst_end xrst}
----------------------------------------------------------------------------
{xrst_begin commands}

xrst Commands
#############
{xrst_child_table
    xrst/get_file_info.py
    xrst/child_commands.py
    xrst/spell_command.py
    xrst/suspend_command.py
    xrst/code_command.py
    xrst/file_command.py
    xrst/remove_comment_ch.py
}

{xrst_end commands}
----------------------------------------------------------------------------
{xrst_begin other_processing}

Other Processing
################
{xrst_child_table
    xrst/remove_indent.py
    xrst/process_headings.py
}


{xrst_end other_processing}
----------------------------------------------------------------------------
{xrst_begin wish_list}
{xrst_spell
    stackoverflow
    pyspellchecker
}

Wish List
#########
The following is a wish list for future improvements to ``run_xrst``:

.. _stackoverflow: https://stackoverflow.com/questions/1686837/
   sphinx-documentation-tool-set-tab-width-in-output

Standard Indent
***************
Change the number of spaces corresponding to a tab from 4 to 3 characters.
This better aligns wih usage in sphinx rst files and saves output columns.

Link to Section Name
********************
Currently, when you link to an entire section, you get the section title
displayed for the link.
It would be good to have a separate anchor that displays the section name;
e.g., ``:ref:section_name`` would display the section name and
``:ref:title@section_name`` would display the section title.

Subset Documentation
********************
Have a way to specify subsets of the documentation by a group name.
For example ``{xrst_begin`` `section_name group_1 group_2}` would say that
this documentation should be included if `group_1` or `group_2`
is specified by the ``xrst`` command line.
If not groups were specified, all groups would be included.

Spelling
********
Add a command that automatically fixes spelling warnings by changing
the :ref:`spell_cmd` in input sections. This is usefull when
pyspellchecker changes, when the
:ref:`run_xrst@command_line_arguments@spelling` file changes,
and when run_xrst automatically ignores more words.

Tabs
****
Tabs in a code blocks get expanded to 8 spaces; see stackoverflow_.
It would be nice to have a way to control the size of tabs in the code blocks
displayed by :ref:`code_cmd` and :ref:`file_cmd`.
Perhaps it would be good to support tabs as a method for
indenting xrst input sections.

{xrst_end wish_list}
----------------------------------------------------------------------------
{xrst_begin release_notes}

xrst Release Notes By Year
##########################
{xrst_children
    release_notes/2022.xrst
    release_notes/2021.xrst
}
:ref:`2022<2022>`,
:ref:`2021<2021>`

{xrst_end release_notes}
----------------------------------------------------------------------------
